# pages/05_Turf_Establishment.py
import base64
import datetime as dt
import streamlit as st
from streamlit.components.v1 import html as st_html
from core.sanitize import e, srcdoc_escape
from core.theme_persist import init_theme, render_toggle, sidebar_skin, nav_colors
from core.theme import apply_theme, fix_select_colors
from core.ui_sidebar import apply_sidebar_shell, sidebar_card, SIDEBAR_CFG
from core import pricing as p
from core import settings as cfg
from core import cart

st.set_page_config(
    page_title="Double Oak ‚Äì Turf Establishment",
    layout="centered",
    initial_sidebar_state="expanded",
)

ui_dark = init_theme(apply_theme_fn=apply_theme, fix_select_colors_fn=fix_select_colors)

st.markdown("""
<style>
header[data-testid="stHeader"]{display:none}
#MainMenu{visibility:hidden}
footer{visibility:hidden}
div.block-container{padding-top:1rem}
</style>
""", unsafe_allow_html=True)

with sidebar_card("Appearance", icon="üåì"):
    ui_dark = render_toggle()

SIDEBAR_CFG.update(sidebar_skin(ui_dark))
apply_sidebar_shell()



with sidebar_card(
    "Project / Customer",
    icon="üìã",
    bg=("#0f1b12" if ui_dark else "#ffffff"),
    border="2px solid #2e6d33",
    radius_px=20,
    pad_x=12, pad_y=12,
):
    st.text_input(
        "Project Title:",
        key="project_name",
        value=st.session_state.get("project_name", ""),
        placeholder="e.g., Lakeside Retail ‚Äì Phase 2",
    )
    st.text_input(
        "Customer Name:",
        key="company_name",
        value=st.session_state.get("company_name", ""),
        placeholder="e.g., ACME Builders",
    )
    st.text_input(
        "Address:",
        key="project_address",
        value=st.session_state.get("project_address", ""),
        placeholder="e.g., 1234 Main St, Austin, TX",
    )
st.markdown("<style>[data-testid='stSidebarNav']{display:none}</style>", unsafe_allow_html=True)

colors = nav_colors(ui_dark)

# ---------- Navigation ----------
PAGES = {
    "Home": "Home.py",
    "Silt Fence": "pages/01_Silt_Fence.py",
    "Inlet Protection": "pages/02_Inlet_Protection.py",
    "Construction Entrance": "pages/03_Construction_Entrance.py",
    "Rock Filter Dams": "pages/04_Rock_Filter_Dams.py",
    "Turf Establishment": "pages/05_Turf_Establishment.py",
    "Aggregate": "pages/06_Aggregate.py",
    "Material Summary": "pages/99_Material_Summary.py",
}
CURRENT_PAGE = "Turf Establishment"

with sidebar_card("Navigate", icon="üß≠", bg=("#0f1b12" if ui_dark else "#ffffff"), shadow="0 4px 14px rgba(0,0,0,.06)"):
    st.markdown('<div id="nav-dd" style="display:none"></div>', unsafe_allow_html=True)
    sel = st.selectbox(
        "Go to page",
        ["‚Äî Select ‚Äî", *PAGES.keys()],
        index=1 + list(PAGES.keys()).index(CURRENT_PAGE),
        key="nav_choice_turf",
    )
    if sel != "‚Äî Select ‚Äî" and sel != CURRENT_PAGE:
        st.query_params.update({"theme": "dark" if st.session_state.get("ui_dark") else "light"})
        st.switch_page(PAGES[sel])

COMPANY_NAME = e(st.session_state.get("company_name", "Double Oak"))
PROJECT_NAME = e(st.session_state.get("project_name", ""))
PROJECT_ADDR = e(st.session_state.get("project_address", ""))

# ---------- Sidebar: Turf Options ----------
tax_rate = getattr(cfg, "SALES_TAX_RATE", 0.0825)

with sidebar_card("Turf Establishment Options", icon="üõ†Ô∏è", bg=("#0f1b12" if ui_dark else "#ffffff"), shadow="0 4px 14px rgba(0,0,0,.06)"):
    turf_type = st.selectbox(
        "Treatment:",
        ["Hydroseed", "Seed + Straw", "Sod (10 ft¬≤ rolls)"],
        key="turf_type",
        help="Select turf establishment method per plan/spec.",
    )
    qty = st.number_input(
        "Area (ft¬≤):",
        min_value=0, step=100, value=5000,
        help="Total square footage.",
        key="turf_area",
    )
    material_cost_per_unit = st.number_input(
        "Material Cost / ft¬≤:",
        min_value=0.0, value=0.18, step=0.01,
        help="Seed/straw/sod materials cost per ft¬≤.",
        key="turf_mat_cost",
    )
    labor_minutes_per_unit = st.number_input(
        "Labor Minutes / 1000 ft¬≤:",
        min_value=0, value=45, step=5,
        help="Install minutes per 1,000 ft¬≤ (normalized).",
        key="turf_labor_per_1000",
    )
    final_price_per_unit = st.number_input(
        "Final Price / ft¬≤:",
        min_value=0.0, value=0.45, step=0.01,
        help="Customer price per ft¬≤ installed.",
        key="turf_price_unit",
    )

# ---------- Calculations ----------
materials_subtotal = qty * material_cost_per_unit
tax = materials_subtotal * tax_rate

# Normalize minutes to per-unit basis
minutes_per_ft2 = (labor_minutes_per_unit / 1000.0) if labor_minutes_per_unit else 0.0
total_minutes = qty * minutes_per_ft2
days = p.job_days_inlet(total_minutes)  # reuse minute-based day calc
labor_per_day = p.get_labor_per_day()
labor_cost = days * labor_per_day

fuel = p.fuel_cost(days, any_work=qty > 0)

# Treat ft¬≤ as ‚Äúunits‚Äù for unit cost math
unit_cost = p.unit_cost_per_unit(qty, materials_subtotal, tax, labor_cost, fuel)
sell_total = final_price_per_unit * qty if qty > 0 else 0.0
# Avoid div-by-zero
price_per_unit_effective = final_price_per_unit or 0.0001
profit_margin = p.margin(price_per_unit_effective, unit_cost)
gross_profit = sell_total - (materials_subtotal + tax + labor_cost + fuel)

# ---------- Sidebar: Status ----------
with sidebar_card("Status", icon="üìä", bg=("#0f1b12" if ui_dark else "#ffffff")):
    ok = profit_margin >= 0.30
    badge_bg   = "#dcfce7" if ok else "#fee2e2"
    badge_text = "#065f46" if ok else "#991b1b"
    badge_bd   = "#16a34a" if ok else "#ef4444"
    label      = "ON TARGET (‚â•30%)" if ok else "UNDER 30%"
    st.markdown(
        f"""
        <div style="text-align:center; margin:8px 0 12px 0;">
          <span style="
            display:inline-block;
            padding:2px 12px;
            border-radius:999px;
            background:{badge_bg};
            color:{badge_text};
            border:3px solid {badge_bd};
            font-weight:600;">
            {label} {profit_margin:.1%}
          </span>
        </div>
        """,
        unsafe_allow_html=True,
    )

# ---------- Sidebar: Export ----------
with sidebar_card("Export", icon="‚¨áÔ∏è", bg=("#0f1b12" if ui_dark else "#ffffff")):
    if st.button("Export to Material Summary", use_container_width=True, disabled=qty <= 0):
        cart.add_item(
            sku="Turf Establishment",
            description=turf_type,
            unit="FT¬≤",
            qty=qty,
            source_page="Turf Establishment",
            notes=f"Labor {labor_minutes_per_unit} min/1000 ft¬≤; Mat ${material_cost_per_unit:,.2f}/ft¬≤",
        )
        st.success("Exported to Material Summary.")
        try:
            st.switch_page("pages/99_Material_Summary.py")
        except Exception:
            pass

# ---------- Header ----------
def _load_logo_b64(path="assets/logo.png"):
    try:
        with open(path, "rb") as f:
            return base64.b64encode(f.read()).decode("ascii")
    except Exception:
        return None

LOGO_B64 = st.session_state.get("logo_b64") or _load_logo_b64()
if LOGO_B64:
    st.session_state["logo_b64"] = LOGO_B64

COMPANY_NAME = st.session_state.get("company_name", "Double Oak")
PROJECT_NAME = st.session_state.get("project_name", "")
PROJECT_ADDR = st.session_state.get("project_address", "")

left, right = st.columns([1, 5], vertical_alignment="center")
with left:
    if LOGO_B64:
        st.markdown(f'<img src="data:image/png;base64,{LOGO_B64}" style="max-height:64px;">', unsafe_allow_html=True)
with right:
    st.markdown(
        f"<div style='line-height:1.2'>"
        f"<h1 style='margin:0'>Turf Establishment Estimate</h1>"
        f"<div style='color:#555'>{COMPANY_NAME}{' ‚Äî ' + PROJECT_NAME if PROJECT_NAME else ''}</div>"
        f"{f'<div style=\"color:#555\">{PROJECT_ADDR}</div>' if PROJECT_ADDR else ''}"
        f"</div>",
        unsafe_allow_html=True,
    )

st.markdown("<div style='height:8px;'></div>", unsafe_allow_html=True)

# ---------- Main estimate ----------
with st.container(border=True):
    st.markdown(
        f"""
**Turf Establishment Estimate**
- **Treatment:** {turf_type}  
- **Area:** {qty:,} ft¬≤  
- **Materials Subtotal:** ${materials_subtotal:,.2f}  
- **Sales Tax ({tax_rate*100:.2f}%):** ${tax:,.2f}  
- **Labor (crew {cfg.LOCKED_CREW_SIZE}):** ${labor_cost:,.2f}  
- **Fuel:** ${fuel:,.2f}  
- **Unit Cost (tax + labor + fuel):** ${unit_cost:,.2f} / ft¬≤  
- **Final Price:** ${final_price_per_unit:,.2f} / ft¬≤  
- **Profit Margin:** {profit_margin:.1%}  
- **Gross Profit:** ${gross_profit:,.2f}  
- **Grand Total:** ${sell_total:,.2f}
        """
    )
